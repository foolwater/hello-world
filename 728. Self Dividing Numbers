class Solution {
public:
    vector<int> selfDividingNumbers(int left, int right) {
        int temp=left;
        int n=right;
        int bit,i,j;
        while(n){
            bit++;
            n/=10;
        }
        
        for(i=left;i<=right;i++){
            
            for(j=bit;j>0;j--){
               if(i%(pow(10,j))<10){
                   
            }
                
            
        }
    }
};


vector<int> final_ans;
    for(int i = left; i <= right; i++){
        int temp = i;
        int count=0, n = 0;
        int base = 10;
        while(temp){
            n++;
            temp /= 10;
        }
        
            temp = i;
            int num = 0;
            while(temp){
                num = temp%10;
                if(num != 0 && i % num == 0){
                   count++; 
                }
                temp /= 10;
            }
        
        if(n == count){
           final_ans.push_back(i); 
        }
        
    }
    
    return final_ans;
}
